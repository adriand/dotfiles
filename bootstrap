#!/usr/bin/env bash
set -e

DOTFILES="$PWD"

# check out git submodules

  git submodule init
  git submodule update --recursive

# set up symlinks

  find "." -name "*.symlink" | egrep -v "\.git|tmp/undo" | while read symlink; do
    symlink="${symlink##./}"
    linkable="$PWD/$symlink"
    basename=$(basename "$linkable" | sed 's/\.symlink$//')

    if [[ -f "$linkable.sh" ]]; then
      target=$($linkable.sh)
    else
      target="$HOME/.$basename"
    fi

    if [[ -e "$target" ]] || [[ -L "$target" ]]; then
      if [[ "$(readlink "$target")" == "$linkable" ]]; then
        continue
      else
        mv -v "$target" "$target.bak"
      fi
    fi

    [[ -d $(dirname "$target") ]] || mkdir -vp $(dirname "$target")

    ln -vs "$linkable" "$target"
  done

# install system-wide ruby gems

  if command -v gem &> /dev/null; then
    gems=$(gem list)

    cat ruby/gems | while read gem; do
      grep "$gem" &> /dev/null <<< $gems && continue

      echo "Installing $gem..."

      if ! gem install $gem; then
        echo "Failed.  Try running with sudo, or debug with \`gem install $gem\`." >&2
        echo "Skipping gem installation." >&2
        
        break
      fi
    done
  fi

# install fonts

  if [[ $(uname) == "Linux" ]]; then
    destination="$HOME/.fonts"
    method="/bin/ln -sv"
  elif [[ $(uname) == "Darwin" ]]; then
    destination="$HOME/Library/Fonts";
    method="/bin/cp -v"
  fi

  if [[ ! -z "$destination" ]]; then
    [[ -d "$destination" ]] || mkdir "$destination"

    for font in system/fonts/*; do
      basename=$(basename "$font")

      [[ -f "$destination/$basename" ]] && continue

      $method "$PWD/$font" "$destination/$basename"
    done
  fi

# update adblock

  $DOTFILES/bin/update-adblock

# compile YouCompleteMe, if it was installed

  if [[ -f "$HOME/.vim/bundle/YouCompleteMe/install.sh" ]]; then
    cd "$HOME/.vim/bundle/YouCompleteMe"

    ./install.sh --clang-completer
  fi
